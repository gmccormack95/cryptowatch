package com.link.stinkies;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.StaticStruct;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint112;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.abi.datatypes.generated.Uint32;
import org.web3j.abi.datatypes.generated.Uint48;
import org.web3j.abi.datatypes.generated.Uint8;
import org.web3j.abi.datatypes.generated.Uint80;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.5.0.
 */
@SuppressWarnings("rawtypes")
public class LinkStaking extends Contract {
    public static final String BINARY = "0x608060405234801561001057600080fd5b506004361061027f5760003560e01c806370a205b81161015c578063c00007b0116100ce578063d602b9fd11610087578063d602b9fd146105df578063de0b985a146105e7578063e19e3d7f146105fc578063e63ab1e91461060f578063fcb6813e14610636578063ffafc0b11461063e57600080fd5b8063c00007b014610568578063cc8463c81461057b578063cefc142914610583578063cf3bf2eb1461058b578063cf6eefb71461059e578063d547741f146105cc57600080fd5b806391d148541161012057806391d148541461050b578063a1eda53c1461051e578063a217fddf14610545578063a9d637e11461054d578063b187bd2614610402578063b88a802f1461056057600080fd5b806370a205b81461047057806384ef8ffc146104965780638580cf76146104bb57806387621cbb146104e25780638da5cb5b1461050357600080fd5b806343d726d6116101f55780635350e731116101b95780635350e731146103ef5780635c975abb146104025780635e2746541461040d578063634e93da1461042d578063649a5ec71461044057806365118b3f1461045357600080fd5b806343d726d6146103b257806344ea559a146103ba57806347535d7b146103cd5780634a4e3bd5146103df57806351858e27146103e757600080fd5b80631a399125116102475780631a3991251461031d578063248a9ca3146103305780632f2ff15d1461035457806336568abe146103675780633c70a5841461037a578063417243c91461039d57600080fd5b806301ffc9a714610284578063022d63fb146102ac5780630aa6220b146102c85780630c7e5c23146102d2578063181f5a77146102ea575b600080fd5b61029761029236600461455c565b610668565b60405190151581526020015b60405180910390f35b620697805b60405165ffffffffffff90911681526020016102a3565b6102d0610693565b005b60075463ffffffff165b6040519081526020016102a3565b604080518082018252601181527005265776172645661756c7420312e302e3607c1b602082015290516102a391906145aa565b6102d061032b3660046145f9565b6106a9565b6102dc61033e366004614623565b6000908152600160208190526040909120015490565b6102d061036236600461463c565b6108ce565b6102d061037536600461463c565b61094d565b610382610a37565b604080519384526020840192909252908201526060016102a3565b6103a5610b1c565b6040516102a39190614668565b6102d0610be6565b6102d06103c83660046146b5565b610d04565b600754600160201b900460ff16610297565b6102d0610f2f565b6102d0610f61565b6102976103fd3660046146e8565b610f93565b60005460ff16610297565b61042061041b3660046146e8565b611076565b6040516102a391906147ab565b6102d061043b3660046146e8565b61113d565b6102d061044e3660046147b9565b611151565b61045b611165565b604080519283526020830191909152016102a3565b7f000000000000000000000000000000000000000000000000000000000076a7006102dc565b6003546001600160a01b03165b6040516001600160a01b0390911681526020016102a3565b6102dc7fbeec13769b5f410b0584f69811bfd923818456d5edcf426b0e31cf90eed7a3f681565b6104f56104f03660046146e8565b61117b565b6040516102a39291906147e1565b6104a3611207565b61029761051936600461463c565b611220565b61052661124b565b6040805165ffffffffffff9384168152929091166020830152016102a3565b6102dc600081565b6102dc61055b3660046146e8565b61129b565b6102dc61130e565b6102dc6105763660046146e8565b61167d565b6102b1611753565b6102d06117b2565b6102d061059936600461480b565b611830565b6105a6611bd1565b604080516001600160a01b03909316835265ffffffffffff9091166020830152016102a3565b6102d06105da36600461463c565b611bf2565b6102d0611c6f565b6105ef611c82565b6040516102a3919061485f565b6102d061060a366004614623565b611d88565b6102dc7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b610297612055565b610646612093565b60408051825181526020808401519082015291810151908201526060016102a3565b60006001600160e01b031982166318a4c3c360e11b148061068d575061068d826120dc565b92915050565b600061069e81612111565b6106a661211b565b50565b336001600160a01b037f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc5161480159061070b5750336001600160a01b037f000000000000000000000000bc10f2e862ed4502144c7d632a3459f49dfcdb5e1614155b1561072957604051631decfebb60e31b815260040160405180910390fd5b610731612128565b600061076983336001600160a01b037f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc516148461227d565b6001600160a01b0384166000908152600c602090815260409182902083518154928501516001600160701b039182166001600160e01b031994851617600160701b918316820217835593850151600183018054606088015192841695169490941791169093029290921780825560808401519394508493919060ff60e01b1916600160e01b83600281111561080057610800614703565b021790555060a0828101516002909201805460c0909401516001600160701b03908116600160701b026001600160e01b03199095169316929092179290921790558151602083015160408085015160608601519486015191516001600160a01b038916957f16aadfd997cc8ab0f2890a6c7fe1ea76bdb61f8c74cc386c92818a2b1767006a956108c19590949093926001600160701b0395861681529385166020850152918416604084015283166060830152909116608082015260a00190565b60405180910390a2505050565b8161093f5760405162461bcd60e51b815260206004820152603660248201527f416363657373436f6e74726f6c3a2063616e2774206469726563746c79206772604482015275616e742064656661756c742061646d696e20726f6c6560501b60648201526084015b60405180910390fd5b610949828261245a565b5050565b8115801561096857506003546001600160a01b038281169116145b15610a2d57600080610978611bd1565b90925090506001600160a01b03821615801561099b575065ffffffffffff811615155b80156109ae57504265ffffffffffff8216105b610a185760405162461bcd60e51b815260206004820152603560248201527f416363657373436f6e74726f6c3a206f6e6c792063616e2072656e6f756e636560448201527420696e2074776f2064656c6179656420737465707360581b6064820152608401610936565b50506002805465ffffffffffff60a01b191690555b6109498282612485565b604080516060810182526005546001600160501b038082168352600160501b820481166020840152600160a01b9091041691810191909152600090819081908190610a81906124ff565b604080516060810182526004546001600160501b038082168352600160501b820481166020840152600160a01b9091041691810191909152909150600090610ac8906124ff565b604080516060810182526006546001600160501b038082168352600160501b820481166020840152600160a01b9091041691810191909152909150600090610b0f906124ff565b9296919550919350915050565b604080516002808252606080830184529260009291906020830190803683370190505090507f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc581600081518110610b7557610b756148f1565b60200260200101906001600160a01b031690816001600160a01b0316815250507f000000000000000000000000bc10f2e862ed4502144c7d632a3459f49dfcdb5e81600181518110610bc957610bc96148f1565b6001600160a01b0390921660209283029190910190910152919050565b6000610bf181612111565b600754600160201b900460ff16610c1b5760405163fc5c1c4560e01b815260040160405180910390fd5b6000610c25612551565b50506007805464ff00000000191690555060405163a9059cbb60e01b8152336004820152602481018290529092507f000000000000000000000000514910771af9ca656af840dff83e8264ecf986ca6001600160a01b0316915063a9059cbb906044016020604051808303816000875af1158015610ca7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccb9190614907565b506040518181527f4ef41257ba66fe15e89bff4221410f2c2a555d82f884ca0b3b29898d28635a8f906020015b60405180910390a15050565b610d2e7fbeec13769b5f410b0584f69811bfd923818456d5edcf426b0e31cf90eed7a3f633611220565b610d4b57604051631decfebb60e31b815260040160405180910390fd5b600754600160201b900460ff16610d755760405163fc5c1c4560e01b815260040160405180910390fd5b610d7d6125f1565b6001600160a01b03831615801590610dc757507f000000000000000000000000bc10f2e862ed4502144c7d632a3459f49dfcdb5e6001600160a01b0316836001600160a01b031614155b8015610e0557507f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc56001600160a01b0316836001600160a01b031614155b15610e225760405162820f3560e61b815260040160405180910390fd5b80600003610e435760405163041c928b60e11b815260040160405180910390fd5b610e4b612128565b610e56838383612637565b6040516323b872dd60e01b8152336004820152306024820152604481018390527f000000000000000000000000514910771af9ca656af840dff83e8264ecf986ca6001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610ec9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eed9190614907565b5060408051838152602081018390526001600160a01b038516917f6a6f77044107a33658235d41bedbbaf2fe9ccdceb313143c947a5e76e1ec847491016108c1565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610f5981612111565b6106a66126bd565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610f8b81612111565b6106a661270f565b60007f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc56001600160a01b0316826001600160a01b0316036110095760045442600160501b9091046001600160501b03161180159061068d57505060065442600160501b9091046001600160501b03161115919050565b7f000000000000000000000000bc10f2e862ed4502144c7d632a3459f49dfcdb5e6001600160a01b0316826001600160a01b03160361105e57505060055442600160501b9091046001600160501b0316111590565b60405162820f3560e61b815260040160405180910390fd5b61107e61451f565b6001600160a01b0382166000908152600c6020908152604091829020825160e08101845281546001600160701b038082168352600160701b918290048116948301949094526001830154808516958301959095528404909216606083015290916080830190600160e01b900460ff1660028111156110fe576110fe614703565b600281111561110f5761110f614703565b8152600291909101546001600160701b038082166020840152600160701b9091041660409091015292915050565b600061114881612111565b6109498261274c565b600061115c81612111565b610949826127bf565b600080611173600b54612828565b915091509091565b61118361451f565b60008061118f84612860565b90506000816111be577f000000000000000000000000bc10f2e862ed4502144c7d632a3459f49dfcdb5e6111e0565b7f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc55b905060006111ee868361297f565b90506111fb868285612a7a565b94509450505050915091565b600061121b6003546001600160a01b031690565b905090565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600354600090600160d01b900465ffffffffffff16801515801561127757504265ffffffffffff821610155b61128357600080611173565b600354600160a01b900465ffffffffffff1692909150565b6000806112a783612860565b6112d1577f000000000000000000000000bc10f2e862ed4502144c7d632a3459f49dfcdb5e6112f3565b7f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc55b90506113076113028483612c6b565b612ce7565b9392505050565b60006113186125f1565b600061132333612860565b905061133b81611334576001612d77565b6002612d77565b600081611368577f000000000000000000000000bc10f2e862ed4502144c7d632a3459f49dfcdb5e61138a565b7f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc55b90506000611398338361297f565b905060006113a733858461227d565b905060006113c1826113bc6113023388612c6b565b613035565b9050808260c0018181516113d5919061493a565b6001600160701b031690525060a0820180518291906113f590839061495a565b6001600160701b0316905250815160009061141190839061495a565b600084526001600160701b03169050851561144857602083015161143e906001600160701b03168261497a565b6000602085015290505b8060000361146957604051635aa9184d60e01b815260040160405180910390fd5b336000908152600c602090815260409182902085518154928701516001600160701b039182166001600160e01b031994851617600160701b91831682021783559387015160018301805460608a01519284169516949094179116909302929092178082556080860151869392909160ff60e01b1916600160e01b8360028111156114f5576114f5614703565b021790555060a0820151600291909101805460c0909301516001600160701b03908116600160701b026001600160e01b031990941692169190911791909117905560405163a9059cbb60e01b8152336004820152602481018290526001600160a01b037f000000000000000000000000514910771af9ca656af840dff83e8264ecf986ca169063a9059cbb906044016020604051808303816000875af11580156115a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c79190614907565b5060405181815233907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72419060200160405180910390a2604080840151606085015160a0860151925133937f16aadfd997cc8ab0f2890a6c7fe1ea76bdb61f8c74cc386c92818a2b1767006a9361166b9360009384939094855260208501939093526001600160701b0391821660408501528116606084015216608082015260a00190565b60405180910390a29550505050505090565b60008061168983612860565b90506000816116b8577f000000000000000000000000bc10f2e862ed4502144c7d632a3459f49dfcdb5e6116da565b7f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc55b905060006116e8858361297f565b90506000806116f8878487612a7a565b91509150600061171b828561170c88613070565b611716919061498d565b6130ef565b925050508083602001518460000151611734919061495a565b6001600160701b0316611747919061497a565b98975050505050505050565b600354600090600160d01b900465ffffffffffff16801515801561177e57504265ffffffffffff8216105b61179957600254600160d01b900465ffffffffffff166117ac565b600354600160a01b900465ffffffffffff165b91505090565b60006117bc611bd1565b509050336001600160a01b038216146118285760405162461bcd60e51b815260206004820152602860248201527f416363657373436f6e74726f6c3a2070656e64696e672061646d696e206d75736044820152671d081858d8d95c1d60c21b6064820152608401610936565b6106a661313a565b336001600160a01b037f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc516148015906118925750336001600160a01b037f000000000000000000000000bc10f2e862ed4502144c7d632a3459f49dfcdb5e1614155b156118b057604051631decfebb60e31b815260040160405180910390fd5b336001600160a01b037f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc516146118eb81611334576001612d77565b60006118f887838861227d565b90506000611909826113bc88612ce7565b9050808260c00181815161191d919061493a565b6001600160701b031690525081518190839061193a90839061495a565b6001600160701b0316905250600060a0830152836119655761195d888386613205565b505050611bca565b60c08201516001600160701b03811660000361198f57611986898487613205565b50505050611bca565b6000846119bc577f000000000000000000000000bc10f2e862ed4502144c7d632a3459f49dfcdb5e6119de565b7f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc55b90506000896119ec83613070565b6119f6919061498d565b905080600003611a8757600060c0860152845183908690611a1890839061495a565b6001600160701b0390811690915260408051600080825260208201529186169082015287151560608201527feb34a4cfa3869c57492c653f9c06f128abac61952688567d4396e9ffaf93a67a915060800160405180910390a1611a7c8b8689613205565b505050505050611bca565b60008a15611ab2578a611aa38a6001600160701b0387166149a0565b611aad91906149cd565b611abd565b836001600160701b03165b9050600087611acd576005611ad0565b60045b90506000611ade83856133a3565b9050611ae9816133b8565b82548390601490611b0b908490600160a01b90046001600160501b03166149e1565b92506101000a8154816001600160501b0302191690836001600160501b031602179055507feb34a4cfa3869c57492c653f9c06f128abac61952688567d4396e9ffaf93a67a838260008c604051611b7d9493929190938452602084019290925260408301521515606082015260800190565b60405180910390a1611b8f888a613424565b611b9883613473565b8860c001818151611ba9919061493a565b6001600160701b0316905250611bc08e898c613205565b5050505050505050505b5050505050565b6002546001600160a01b03811691600160a01b90910465ffffffffffff1690565b81611c655760405162461bcd60e51b815260206004820152603760248201527f416363657373436f6e74726f6c3a2063616e2774206469726563746c7920726560448201527f766f6b652064656661756c742061646d696e20726f6c650000000000000000006064820152608401610936565b61094982826134dc565b6000611c7a81612111565b6106a6613502565b611ced6040805160c081019091526000606082018181526080830182905260a083019190915281908152604080516060810182526000808252602082810182905292820152910190815260408051606081018252600080825260208281018290529282015291015290565b506040805160c0810182526004546001600160501b038082166060808501918252600160501b80850484166080870152600160a01b94859004841660a08701529185528551808201875260055480851682528381048516602083810191909152908690048516828901528087019190915286519182018752600654808516835292830484169082015292900416818401529181019190915290565b6000611d9381612111565b60075463ffffffff1682811480611dab575061271083115b15611dc95760405163027953ef60e61b815260040160405180910390fd5b600654600554600091611de8916001600160501b0391821691166149e1565b6001600160501b0316905060008415611e1757612710611e0886846149a0565b611e1291906149cd565b611e1a565b60005b905080158015611e2957508415155b8015611e3457508115155b15611e525760405163ba00abbd60e01b815260040160405180910390fd5b611e5a612128565b604080516060810182526006546001600160501b038082168352600160501b820481166020840152600160a01b9091041691810191909152600090611e9e906124ff565b604080516060810182526005546001600160501b038082168352600160501b820481166020840152600160a01b9091041691810191909152611edf906124ff565b611ee9919061497a565b90506000611ef7838561498d565b9050611f02816133b8565b6005805469ffffffffffffffffffff19166001600160501b0392909216919091179055611f2e836133b8565b6006805469ffffffffffffffffffff19166001600160501b03929092169190911790556000879003611f7e5760068054600160501b600160a01b0319169055611f796005838361350d565b611ff0565b6127108703611fa65760058054600160501b600160a01b0319169055611f796006838561350d565b8115611ff0576000612710611fbb89856149a0565b611fc591906149cd565b90506000611fd3828561498d565b9050611fe16005828561350d565b611fed6006838761350d565b50505b611ff98761355c565b6007805463ffffffff191663ffffffff9290921691909117905560408051868152602081018990527f03402a75be6462f03cfaa1a1d189e17ecf71c8b57bf127e93f5f5aeae974b43c910160405180910390a150505050505050565b6004546000906001600160501b031615158061207b57506005546001600160501b031615155b8061121b5750506006546001600160501b0316151590565b6120b760405180606001604052806000815260200160008152602001600081525090565b506040805160608101825260085481526009546020820152600a549181019190915290565b60006001600160e01b03198216637965db0b60e01b148061068d57506301ffc9a760e01b6001600160e01b031983161461068d565b6106a681336135c1565b61212660008061361a565b565b600080612136600b54612828565b91509150428214801561214857504281145b15612151575050565b600080600061215e6136da565b92509250925061216d836133b8565b600580546001600160501b0392909216600160a01b02600160a01b600160f01b03199092169190911790556121a1826133b8565b600480546001600160501b0392909216600160a01b02600160a01b600160f01b03199092169190911790556121d5816133b8565b600680546001600160501b0392909216600160a01b02600160a01b600160f01b031990921691909117905561220a4280613823565b6040518381527f1236d5f7290187e9ac80880b3e28a193a9f38bb8bdc8a8a197744d80c50ca3269060200160405180910390a160408051838152602081018390527f9eecdebdae54d18e0c665dae22811251367c65647ec09aa5e33f001a5c147d22910160405180910390a15050505050565b61228561451f565b6001600160a01b0384166000908152600c60209081526040808320815160e08101835281546001600160701b038082168352600160701b9182900481169583019590955260018301548086169483019490945283049093166060840152906080830190600160e01b900460ff16600281111561230357612303614703565b600281111561231457612314614703565b8152600291909101546001600160701b038082166020840152600160701b90910416604090910152905060008160800151600281111561235657612356614703565b03612397578361236757600161236a565b60025b8160800190600281111561238057612380614703565b9081600281111561239357612393614703565b9052505b6123e36123de8285876123bc57600554600160a01b90046001600160501b03166123d0565b600454600160a01b90046001600160501b03165b6001600160501b0316613847565b613473565b8160c0018181516123f4919061495a565b6001600160701b031690525083156124485760065461242a906123de9083908690600160a01b90046001600160501b031661386b565b8160200181815161243b919061495a565b6001600160701b03169052505b6124528185613424565b949350505050565b6000828152600160208190526040909120015461247681612111565b6124808383613886565b505050565b6001600160a01b03811633146124f55760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610936565b6109498282613930565b60004282602001516001600160501b03161115612549574282602001516001600160501b031661252f919061498d565b825161254491906001600160501b03166149a0565b61068d565b600092915050565b6000806000806000612561612128565b600061256d600461396b565b9050600061257b600561396b565b90506000612589600661396b565b9050600081612598848661497a565b6125a2919061497a565b90506125ac6139e6565b6006546005546004546001600160501b03928316926125ce92811691166149e1565b6125d891906149e1565b6001600160501b03169990985092965090945092509050565b60005460ff16156121265760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610936565b6007546000906126549085908590859063ffffffff161515613afc565b90508060600151600014612675578051606082015161267591600591613ebc565b60808101511561269657612696600460000182602001518360800151613ebc565b60a0810151156126b7576126b7600460020182604001518360a00151613ebc565b50505050565b6126c5613f6b565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6127176125f1565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586126f23390565b6000612756611753565b61275f42613fb4565b6127699190614a01565b9050612775828261401b565b60405165ffffffffffff821681526001600160a01b038316907f3377dc44241e779dd06afab5b788a35ca5f3b778836e2990bdb26a2a4b2e5ed69060200160405180910390a25050565b60006127ca8261409a565b6127d342613fb4565b6127dd9190614a01565b90506127e9828261361a565b6040805165ffffffffffff8085168252831660208201527ff1038c18cf84a56e432fdbfaf746924b7ea511dfe03a6506a0ceba4888788d9b9101610cf8565b6000808061283e670de0b6b3a7640000856149cd565b90506000612854670de0b6b3a764000086614a20565b91959194509092505050565b6040516336b87bd760e11b81526001600160a01b0382811660048301526000917f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc590911690636d70f7ae90602401602060405180830381865afa1580156128cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128ef9190614907565b8061068d5750604051637d3374e560e01b81526001600160a01b0383811660048301527f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc51690637d3374e590602401602060405180830381865afa15801561295b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068d9190614907565b600754600090600160201b900460ff16612a0f57600a54604051634c5b725f60e01b81526001600160a01b038581166004830152602482019290925290831690634c5b725f906044015b602060405180830381865afa1580156129e6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a0a9190614a34565b611307565b604051630706983f60e51b81526001600160a01b03848116600483015283169063e0d307e0906024015b602060405180830381865afa158015612a56573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113079190614a34565b612a8261451f565b6001600160a01b0384166000908152600c60209081526040808320815160e08101835281546001600160701b038082168352600160701b91829004811695830195909552600183015480861694830194909452830490931660608401528392916080830190600160e01b900460ff166002811115612b0257612b02614703565b6002811115612b1357612b13614703565b8152600291909101546001600160701b038082166020840152600160701b90910416604090910152905060008080612b496136da565b925092509250612b686123de858a8a612b625786613847565b85613847565b8460c001818151612b79919061495a565b6001600160701b03169052508615612bb757612b996123de858a8461386b565b84602001818151612baa919061495a565b6001600160701b03169052505b6000612c15856113bc6113028d8c612bef577f000000000000000000000000bc10f2e862ed4502144c7d632a3459f49dfcdb5e612c6b565b7f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc5612c6b565b90508085600001818151612c29919061495a565b6001600160701b031690525060c0850151600090612c4890839061493a565b600060c0880152959b6001600160701b039096169a509498505050505050505050565b600754600090600160201b900460ff16612cb957600a54604051634b669bff60e11b81526001600160a01b0385811660048301526024820192909252908316906396cd37fe906044016129c9565b604051631624e46160e21b81526001600160a01b038481166004830152831690635893918490602401612a39565b600081600003612cf957506000919050565b600754600160201b900460ff16612d195750670de0b6b3a7640000919050565b7f000000000000000000000000000000000000000000000000000000000076a7006000819003612d535750670de0b6b3a764000092915050565b611307612d69612d63854261498d565b836133a3565b670de0b6b3a76400006140d9565b600080612d85600b54612828565b90925090506001836002811115612d9e57612d9e614703565b03612ea357428203612daf57505050565b604080516060810182526005546001600160501b038082168352600160501b820481166020840152600160a01b9091041691810191909152612e2390612e1e90612e187f000000000000000000000000bc10f2e862ed4502144c7d632a3459f49dfcdb5e613070565b856140ef565b6133b8565b600580546001600160501b0392909216600160a01b02600160a01b600160f01b0319909216919091179055612e584282613823565b600554604051600160a01b9091046001600160501b031681527f1236d5f7290187e9ac80880b3e28a193a9f38bb8bdc8a8a197744d80c50ca3269060200160405180910390a1505050565b6002836002811115612eb757612eb7614703565b0361248057428103612ec857505050565b6000612ef37f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc5613070565b604080516060810182526004546001600160501b038082168352600160501b820481166020840152600160a01b9091041691810191909152909150612f3d90612e1e9083856140ef565b60048054600160a01b600160f01b031916600160a01b6001600160501b03938416810291909117909155604080516060810182526006548085168252600160501b8104851660208301529290920490921691810191909152612fa490612e1e9083856140ef565b600680546001600160501b0392909216600160a01b02600160a01b600160f01b0319909216919091179055612fd98342613823565b600454600654604080516001600160501b03600160a01b94859004811682529390920490921660208201527f9eecdebdae54d18e0c665dae22811251367c65647ec09aa5e33f001a5c147d22910160405180910390a150505050565b60008260a001516130666123de848660a001518760c00151613057919061495a565b6001600160701b031690614197565b611307919061493a565b600754600090600160201b900460ff1661308d57612544826141ac565b816001600160a01b031663885491af6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156130cb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068d9190614a34565b60008060008460000361310a57506000915081905080613133565b6000808086156131285787925061312183886133a3565b915061312b565b50865b919450925090505b9250925092565b600080613145611bd1565b9150915061315a8165ffffffffffff16151590565b801561316d57504265ffffffffffff8216105b6131ca5760405162461bcd60e51b815260206004820152602860248201527f416363657373436f6e74726f6c3a207472616e736665722064656c6179206e6f6044820152671d081c185cdcd95960c21b6064820152608401610936565b6131e660006131e16003546001600160a01b031690565b613930565b6131f1600083613886565b5050600280546001600160d01b0319169055565b6001600160a01b0383166000908152600c602090815260409182902084518154928601516001600160701b039182166001600160e01b031994851617600160701b91831682021783559386015160018301805460608901519284169516949094179116909302929092178082556080850151859392909160ff60e01b1916600160e01b83600281111561329a5761329a614703565b021790555060a08201516002909101805460c0909301516001600160701b03908116600160701b026001600160e01b03199094169216919091179190911790556040516001600160a01b038416907fa6b1f21803a1471cf6981bffc4c07ff6610f2b88efc44f62b96dca65a63d3d279061331990841515815260200190565b60405180910390a2826001600160a01b03167f16aadfd997cc8ab0f2890a6c7fe1ea76bdb61f8c74cc386c92818a2b1767006a83600001518460200151856040015186606001518760a001516040516108c19594939291906001600160701b0395861681529385166020850152918416604084015283166060830152909116608082015260a00190565b600061130783670de0b6b3a7640000846141f7565b60006001600160501b038211156134205760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203860448201526530206269747360d01b6064820152608401610936565b5090565b8015613456576004546001600160501b03600160a01b9182900481166040850152600654919091041660608301525050565b6005546001600160501b03600160a01b9091041660408301525050565b60006001600160701b038211156134205760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663132206269747360c81b6064820152608401610936565b600082815260016020819052604090912001546134f881612111565b6124808383613930565b61212660008061401b565b8060000361351a57505050565b61353161352782846149cd565b612e1e904261497a565b83546001600160501b0391909116600160501b02600160501b600160a01b0319909116179092555050565b600063ffffffff8211156134205760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608401610936565b6135cb8282611220565b610949576135d881614215565b6135e3836020614227565b6040516020016135f4929190614a4d565b60408051601f198184030181529082905262461bcd60e51b8252610936916004016145aa565b600354600160d01b900465ffffffffffff16801561369d574265ffffffffffff8216101561367357600354600280546001600160d01b0316600160a01b90920465ffffffffffff16600160d01b0291909117905561369d565b6040517f2b1fa2edafe6f7b9e97c1a9e0c3660e645beb2dcaa2d45bdbf9beaf5472e1ec590600090a15b50600380546001600160a01b0316600160a01b65ffffffffffff948516026001600160d01b031617600160d01b9290931691909102919091179055565b6000806000806137097f000000000000000000000000bc10f2e862ed4502144c7d632a3459f49dfcdb5e613070565b905060006137367f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc5613070565b9050600080613746600b54612828565b604080516060810182526005546001600160501b038082168352600160501b820481166020840152600160a01b9091041691810191909152919350915061378e9085846140ef565b604080516060810182526004546001600160501b038082168352600160501b820481166020840152600160a01b90910416918101919091526137d19085846140ef565b604080516060810182526006546001600160501b038082168352600160501b820481166020840152600160a01b90910416918101919091526138149086856140ef565b96509650965050505050909192565b8061383683670de0b6b3a76400006149a0565b613840919061497a565b600b555050565b6000806138628486604001516001600160701b0316856143c3565b95945050505050565b6000806138628486606001516001600160701b0316856143c3565b8161392657600061389f6003546001600160a01b031690565b6001600160a01b03161461390a5760405162461bcd60e51b815260206004820152602c60248201527f416363657373436f6e74726f6c3a2064656661756c742061646d696e20616c7260448201526b1958591e4819dc985b9d195960a21b6064820152608401610936565b600380546001600160a01b0319166001600160a01b0383161790555b61094982826143d9565b8115801561394b57506003546001600160a01b038281169116145b1561396157600380546001600160a01b03191690555b6109498282614444565b6040805160608101825282546001600160501b038082168352600160501b820481166020840152600160a01b909104169181019190915260009081906139b0906124ff565b90506139bb426133b8565b83546001600160501b0391909116600160501b02600160501b600160a01b0319909116179092555090565b7f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc56001600160a01b031663885491af6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613a44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a689190614a34565b6008600001819055507f000000000000000000000000bc10f2e862ed4502144c7d632a3459f49dfcdb5e6001600160a01b031663885491af6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613acf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613af39190614a34565b60095543600a55565b613b356040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b60007f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc56001600160a01b0316866001600160a01b031603613b77576000613bf9565b7f000000000000000000000000bc10f2e862ed4502144c7d632a3459f49dfcdb5e6001600160a01b0316630fbc8f5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613bd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613bf99190614a34565b905060007f000000000000000000000000bc10f2e862ed4502144c7d632a3459f49dfcdb5e6001600160a01b0316876001600160a01b031603613c3d576000613cbf565b7f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc56001600160a01b0316630fbc8f5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613c9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613cbf9190614a34565b90506000613ccd828461497a565b90506000806000807f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc56001600160a01b03168c6001600160a01b031603613d19578a9350899150613db9565b7f000000000000000000000000bc10f2e862ed4502144c7d632a3459f49dfcdb5e6001600160a01b03168c6001600160a01b031603613d5c575089915088613db9565b613d678b87876144ab565b613d728a87876144ea565b84613d7d878d6149a0565b613d8791906149cd565b935084613d94878c6149a0565b613d9e91906149cd565b9150613daa848c61498d565b9250613db6828b61498d565b90505b6000808a8015613dc857508815155b15613e855760075461271090613de49063ffffffff16876149a0565b613dee91906149cd565b9150600085118015613dfe575081155b15613e1c57604051633853986560e01b815260040160405180910390fd5b613e26828661498d565b60075490955061271090613e409063ffffffff16856149a0565b613e4a91906149cd565b9050600083118015613e5a575080155b15613e785760405163041c928b60e11b815260040160405180910390fd5b613e82818461498d565b92505b6040805160c0810182529586526020860196909652948401526060830152608082015260a081019190915298975050505050505050565b6040805160608101825284546001600160501b038082168352600160501b820481166020840152600160a01b9091041691810191909152600090613eff906124ff565b905081613f0c828561497a565b1015613f2a5760405162da056d60e81b815260040160405180910390fd5b613f3e84613f38838661497a565b8461350d565b613f47826133b8565b845469ffffffffffffffffffff19166001600160501b039190911617909355505050565b60005460ff166121265760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610936565b600065ffffffffffff8211156134205760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203460448201526538206269747360d01b6064820152608401610936565b6000614025611bd1565b6002805465ffffffffffff8616600160a01b026001600160d01b03199091166001600160a01b03881617179055915061406790508165ffffffffffff16151590565b15612480576040517f8886ebfc4259abdbc16601dd8fb5678e54878f47b3c34836cfc51154a960510990600090a1505050565b6000806140a5611753565b90508065ffffffffffff168365ffffffffffff16116140c857612a0a8382614ac2565b61130765ffffffffffff8416620697805b60008183106140e85781611307565b5090919050565b60008260000361410d575060408301516001600160501b0316611307565b600061412685602001516001600160501b0316426140d9565b905082811161414457505060408301516001600160501b0316611307565b6000614150848361498d565b90506141758587600001516001600160501b03168361416f91906149a0565b906133a3565b86604001516001600160501b031661418d919061497a565b9695505050505050565b60006113078383670de0b6b3a76400006141f7565b60007f000000000000000000000000a1d76a7ca72128541e9fcacafbda3a92ef94fdc56001600160a01b0316826001600160a01b0316146141ef5760095461068d565b505060085490565b600082600019048411830215820261420e57600080fd5b5091020490565b606061068d6001600160a01b03831660145b606060006142368360026149a0565b61424190600261497a565b67ffffffffffffffff811115614259576142596148db565b6040519080825280601f01601f191660200182016040528015614283576020820181803683370190505b509050600360fc1b8160008151811061429e5761429e6148f1565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106142cd576142cd6148f1565b60200101906001600160f81b031916908160001a90535060006142f18460026149a0565b6142fc90600161497a565b90505b6001811115614374576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110614330576143306148f1565b1a60f81b828281518110614346576143466148f1565b60200101906001600160f81b031916908160001a90535060049490941c9361436d81614ae1565b90506142ff565b5083156113075760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610936565b60006124526143d2848461498d565b8590614197565b6143e38282611220565b6109495760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b61444e8282611220565b156109495760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b82158015906144cc575081158015906144cc5750806144ca83856149a0565b105b1561248057604051633853986560e01b815260040160405180910390fd5b81158015906145015750806144ff83856149a0565b105b156124805760405163041c928b60e11b815260040160405180910390fd5b6040805160e08101825260008082526020820181905291810182905260608101829052906080820190815260006020820181905260409091015290565b60006020828403121561456e57600080fd5b81356001600160e01b03198116811461130757600080fd5b60005b838110156145a1578181015183820152602001614589565b50506000910152565b60208152600082518060208401526145c9816040850160208701614586565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146145f457600080fd5b919050565b6000806040838503121561460c57600080fd5b614615836145dd565b946020939093013593505050565b60006020828403121561463557600080fd5b5035919050565b6000806040838503121561464f57600080fd5b8235915061465f602084016145dd565b90509250929050565b6020808252825182820181905260009190848201906040850190845b818110156146a95783516001600160a01b031683529284019291840191600101614684565b50909695505050505050565b6000806000606084860312156146ca57600080fd5b6146d3846145dd565b95602085013595506040909401359392505050565b6000602082840312156146fa57600080fd5b611307826145dd565b634e487b7160e01b600052602160045260246000fd5b6001600160701b038082511683528060208301511660208401528060408301511660408401528060608301511660608401525060808101516003811061476f57634e487b7160e01b600052602160045260246000fd5b8060808401525060a081015161479060a08401826001600160701b03169052565b5060c081015161248060c08401826001600160701b03169052565b60e0810161068d8284614719565b6000602082840312156147cb57600080fd5b813565ffffffffffff8116811461130757600080fd5b61010081016147f08285614719565b8260e08301529392505050565b80151581146106a657600080fd5b600080600080600060a0868803121561482357600080fd5b61482c866145dd565b94506020860135935060408601359250606086013591506080860135614851816147fd565b809150509295509295909350565b815180516001600160501b039081168352602080830151821681850152604092830151821683850152808501518051831660608601528082015183166080860152830151821660a0850152828501518051831660c086015290810151821660e085015291820151166101008301526101208201905b5092915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561491957600080fd5b8151611307816147fd565b634e487b7160e01b600052601160045260246000fd5b6001600160701b038281168282160390808211156148d4576148d4614924565b6001600160701b038181168382160190808211156148d4576148d4614924565b8082018082111561068d5761068d614924565b8181038181111561068d5761068d614924565b808202811582820484141761068d5761068d614924565b634e487b7160e01b600052601260045260246000fd5b6000826149dc576149dc6149b7565b500490565b6001600160501b038181168382160190808211156148d4576148d4614924565b65ffffffffffff8181168382160190808211156148d4576148d4614924565b600082614a2f57614a2f6149b7565b500690565b600060208284031215614a4657600080fd5b5051919050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351614a85816017850160208801614586565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351614ab6816028840160208801614586565b01602801949350505050565b65ffffffffffff8281168282160390808211156148d4576148d4614924565b600081614af057614af0614924565b50600019019056fea2646970667358221220759dc3b88a3e08ba309d211f431f2485ef8307884fb25ec991b4b67724d1cfe864736f6c63430008130033";

    public static final String FUNC_DEFAULT_ADMIN_ROLE = "DEFAULT_ADMIN_ROLE";

    public static final String FUNC_PAUSER_ROLE = "PAUSER_ROLE";

    public static final String FUNC_REWARDER_ROLE = "REWARDER_ROLE";

    public static final String FUNC_ACCEPTDEFAULTADMINTRANSFER = "acceptDefaultAdminTransfer";

    public static final String FUNC_ADDREWARD = "addReward";

    public static final String FUNC_BEGINDEFAULTADMINTRANSFER = "beginDefaultAdminTransfer";

    public static final String FUNC_CALCULATELATESTSTAKERREWARD = "calculateLatestStakerReward";

    public static final String FUNC_CANCELDEFAULTADMINTRANSFER = "cancelDefaultAdminTransfer";

    public static final String FUNC_CHANGEDEFAULTADMINDELAY = "changeDefaultAdminDelay";

    public static final String FUNC_CLAIMREWARD = "claimReward";

    public static final String FUNC_CLOSE = "close";

    public static final String FUNC_CONCLUDEREWARDPERIOD = "concludeRewardPeriod";

    public static final String FUNC_DEFAULTADMIN = "defaultAdmin";

    public static final String FUNC_DEFAULTADMINDELAY = "defaultAdminDelay";

    public static final String FUNC_DEFAULTADMINDELAYINCREASEWAIT = "defaultAdminDelayIncreaseWait";

    public static final String FUNC_EMERGENCYPAUSE = "emergencyPause";

    public static final String FUNC_EMERGENCYUNPAUSE = "emergencyUnpause";

    public static final String FUNC_GETDELEGATIONRATE = "getDelegationRate";

    public static final String FUNC_GETFINALVESTINGCHECKPOINTDATA = "getFinalVestingCheckpointData";

    public static final String FUNC_GETMULTIPLIER = "getMultiplier";

    public static final String FUNC_GETMULTIPLIERDURATION = "getMultiplierDuration";

    public static final String FUNC_GETREWARD = "getReward";

    public static final String FUNC_GETREWARDBUCKETS = "getRewardBuckets";

    public static final String FUNC_GETREWARDPERTOKENUPDATEDAT = "getRewardPerTokenUpdatedAt";

    public static final String FUNC_GETROLEADMIN = "getRoleAdmin";

    public static final String FUNC_GETSTAKINGPOOLS = "getStakingPools";

    public static final String FUNC_GETSTOREDREWARD = "getStoredReward";

    public static final String FUNC_GETUNVESTEDREWARDS = "getUnvestedRewards";

    public static final String FUNC_GRANTROLE = "grantRole";

    public static final String FUNC_HASREWARDADDED = "hasRewardAdded";

    public static final String FUNC_HASREWARDDURATIONENDED = "hasRewardDurationEnded";

    public static final String FUNC_HASROLE = "hasRole";

    public static final String FUNC_ISOPEN = "isOpen";

    public static final String FUNC_ISPAUSED = "isPaused";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_PAUSED = "paused";

    public static final String FUNC_PENDINGDEFAULTADMIN = "pendingDefaultAdmin";

    public static final String FUNC_PENDINGDEFAULTADMINDELAY = "pendingDefaultAdminDelay";

    public static final String FUNC_RENOUNCEROLE = "renounceRole";

    public static final String FUNC_REVOKEROLE = "revokeRole";

    public static final String FUNC_ROLLBACKDEFAULTADMINDELAY = "rollbackDefaultAdminDelay";

    public static final String FUNC_SETDELEGATIONRATE = "setDelegationRate";

    public static final String FUNC_SUPPORTSINTERFACE = "supportsInterface";

    public static final String FUNC_TYPEANDVERSION = "typeAndVersion";

    public static final String FUNC_UPDATEREWARD = "updateReward";

    public static final Event COMMUNITYPOOLREWARDUPDATED_EVENT = new Event("CommunityPoolRewardUpdated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event DEFAULTADMINDELAYCHANGECANCELED_EVENT = new Event("DefaultAdminDelayChangeCanceled", 
            Arrays.<TypeReference<?>>asList());
    ;

    public static final Event DEFAULTADMINDELAYCHANGESCHEDULED_EVENT = new Event("DefaultAdminDelayChangeScheduled", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint48>() {}, new TypeReference<Uint48>() {}));
    ;

    public static final Event DEFAULTADMINTRANSFERCANCELED_EVENT = new Event("DefaultAdminTransferCanceled", 
            Arrays.<TypeReference<?>>asList());
    ;

    public static final Event DEFAULTADMINTRANSFERSCHEDULED_EVENT = new Event("DefaultAdminTransferScheduled", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Uint48>() {}));
    ;

    public static final Event DELEGATIONRATESET_EVENT = new Event("DelegationRateSet", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event FORFEITEDREWARDDISTRIBUTED_EVENT = new Event("ForfeitedRewardDistributed", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Bool>() {}));
    ;

    public static final Event OPERATORPOOLREWARDUPDATED_EVENT = new Event("OperatorPoolRewardUpdated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event PAUSED_EVENT = new Event("Paused", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event REWARDADDED_EVENT = new Event("RewardAdded", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event REWARDCLAIMED_EVENT = new Event("RewardClaimed", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event REWARDFINALIZED_EVENT = new Event("RewardFinalized", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Bool>() {}));
    ;

    public static final Event ROLEADMINCHANGED_EVENT = new Event("RoleAdminChanged", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}));
    ;

    public static final Event ROLEGRANTED_EVENT = new Event("RoleGranted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event ROLEREVOKED_EVENT = new Event("RoleRevoked", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event STAKERREWARDUPDATED_EVENT = new Event("StakerRewardUpdated", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event UNPAUSED_EVENT = new Event("Unpaused", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
    ;

    public static final Event VAULTCLOSED_EVENT = new Event("VaultClosed", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
    ;

    public static final Event VAULTOPENED_EVENT = new Event("VaultOpened", 
            Arrays.<TypeReference<?>>asList());
    ;

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<String, String>();
    }

    @Deprecated
    protected LinkStaking(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected LinkStaking(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected LinkStaking(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected LinkStaking(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static CommunityPoolRewardUpdatedEventResponse getCommunityPoolRewardUpdatedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(COMMUNITYPOOLREWARDUPDATED_EVENT, log);
        CommunityPoolRewardUpdatedEventResponse typedResponse = new CommunityPoolRewardUpdatedEventResponse();
        typedResponse.log = log;
        typedResponse.baseRewardPerToken = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        return typedResponse;
    }

    public Flowable<CommunityPoolRewardUpdatedEventResponse> communityPoolRewardUpdatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getCommunityPoolRewardUpdatedEventFromLog(log));
    }

    public Flowable<CommunityPoolRewardUpdatedEventResponse> communityPoolRewardUpdatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(COMMUNITYPOOLREWARDUPDATED_EVENT));
        return communityPoolRewardUpdatedEventFlowable(filter);
    }

    public static DefaultAdminDelayChangeCanceledEventResponse getDefaultAdminDelayChangeCanceledEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(DEFAULTADMINDELAYCHANGECANCELED_EVENT, log);
        DefaultAdminDelayChangeCanceledEventResponse typedResponse = new DefaultAdminDelayChangeCanceledEventResponse();
        typedResponse.log = log;
        return typedResponse;
    }

    public Flowable<DefaultAdminDelayChangeCanceledEventResponse> defaultAdminDelayChangeCanceledEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getDefaultAdminDelayChangeCanceledEventFromLog(log));
    }

    public Flowable<DefaultAdminDelayChangeCanceledEventResponse> defaultAdminDelayChangeCanceledEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DEFAULTADMINDELAYCHANGECANCELED_EVENT));
        return defaultAdminDelayChangeCanceledEventFlowable(filter);
    }

    public static DefaultAdminDelayChangeScheduledEventResponse getDefaultAdminDelayChangeScheduledEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(DEFAULTADMINDELAYCHANGESCHEDULED_EVENT, log);
        DefaultAdminDelayChangeScheduledEventResponse typedResponse = new DefaultAdminDelayChangeScheduledEventResponse();
        typedResponse.log = log;
        typedResponse.newDelay = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.effectSchedule = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
        return typedResponse;
    }

    public Flowable<DefaultAdminDelayChangeScheduledEventResponse> defaultAdminDelayChangeScheduledEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getDefaultAdminDelayChangeScheduledEventFromLog(log));
    }

    public static DefaultAdminTransferCanceledEventResponse getDefaultAdminTransferCanceledEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(DEFAULTADMINTRANSFERCANCELED_EVENT, log);
        DefaultAdminTransferCanceledEventResponse typedResponse = new DefaultAdminTransferCanceledEventResponse();
        typedResponse.log = log;
        return typedResponse;
    }

    public Flowable<DefaultAdminTransferCanceledEventResponse> defaultAdminTransferCanceledEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getDefaultAdminTransferCanceledEventFromLog(log));
    }

    public Flowable<DefaultAdminTransferCanceledEventResponse> defaultAdminTransferCanceledEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DEFAULTADMINTRANSFERCANCELED_EVENT));
        return defaultAdminTransferCanceledEventFlowable(filter);
    }

    public static DefaultAdminTransferScheduledEventResponse getDefaultAdminTransferScheduledEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(DEFAULTADMINTRANSFERSCHEDULED_EVENT, log);
        DefaultAdminTransferScheduledEventResponse typedResponse = new DefaultAdminTransferScheduledEventResponse();
        typedResponse.log = log;
        typedResponse.newAdmin = (String) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.acceptSchedule = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        return typedResponse;
    }

    public Flowable<DefaultAdminTransferScheduledEventResponse> defaultAdminTransferScheduledEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getDefaultAdminTransferScheduledEventFromLog(log));
    }

    public Flowable<DefaultAdminTransferScheduledEventResponse> defaultAdminTransferScheduledEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DEFAULTADMINTRANSFERSCHEDULED_EVENT));
        return defaultAdminTransferScheduledEventFlowable(filter);
    }

    public static DelegationRateSetEventResponse getDelegationRateSetEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(DELEGATIONRATESET_EVENT, log);
        DelegationRateSetEventResponse typedResponse = new DelegationRateSetEventResponse();
        typedResponse.log = log;
        typedResponse.oldDelegationRate = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.newDelegationRate = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
        return typedResponse;
    }

    public Flowable<DelegationRateSetEventResponse> delegationRateSetEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getDelegationRateSetEventFromLog(log));
    }

    public Flowable<DelegationRateSetEventResponse> delegationRateSetEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(DELEGATIONRATESET_EVENT));
        return delegationRateSetEventFlowable(filter);
    }

    public static ForfeitedRewardDistributedEventResponse getForfeitedRewardDistributedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(FORFEITEDREWARDDISTRIBUTED_EVENT, log);
        ForfeitedRewardDistributedEventResponse typedResponse = new ForfeitedRewardDistributedEventResponse();
        typedResponse.log = log;
        typedResponse.vestedReward = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.vestedRewardPerToken = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
        typedResponse.reclaimedReward = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
        typedResponse.isOperatorReward = (Boolean) eventValues.getNonIndexedValues().get(3).getValue();
        return typedResponse;
    }

    public Flowable<ForfeitedRewardDistributedEventResponse> forfeitedRewardDistributedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getForfeitedRewardDistributedEventFromLog(log));
    }

    public Flowable<ForfeitedRewardDistributedEventResponse> forfeitedRewardDistributedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(FORFEITEDREWARDDISTRIBUTED_EVENT));
        return forfeitedRewardDistributedEventFlowable(filter);
    }

    public static OperatorPoolRewardUpdatedEventResponse getOperatorPoolRewardUpdatedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(OPERATORPOOLREWARDUPDATED_EVENT, log);
        OperatorPoolRewardUpdatedEventResponse typedResponse = new OperatorPoolRewardUpdatedEventResponse();
        typedResponse.log = log;
        typedResponse.baseRewardPerToken = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.delegatedRewardPerToken = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
        return typedResponse;
    }

    public Flowable<OperatorPoolRewardUpdatedEventResponse> operatorPoolRewardUpdatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getOperatorPoolRewardUpdatedEventFromLog(log));
    }

    public Flowable<OperatorPoolRewardUpdatedEventResponse> operatorPoolRewardUpdatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(OPERATORPOOLREWARDUPDATED_EVENT));
        return operatorPoolRewardUpdatedEventFlowable(filter);
    }

    public static PausedEventResponse getPausedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(PAUSED_EVENT, log);
        PausedEventResponse typedResponse = new PausedEventResponse();
        typedResponse.log = log;
        typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
        return typedResponse;
    }

    public Flowable<PausedEventResponse> pausedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getPausedEventFromLog(log));
    }

    public Flowable<PausedEventResponse> pausedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PAUSED_EVENT));
        return pausedEventFlowable(filter);
    }

    public static RewardAddedEventResponse getRewardAddedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(REWARDADDED_EVENT, log);
        RewardAddedEventResponse typedResponse = new RewardAddedEventResponse();
        typedResponse.log = log;
        typedResponse.pool = (String) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.amount = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.emissionRate = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
        return typedResponse;
    }

    public Flowable<RewardAddedEventResponse> rewardAddedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getRewardAddedEventFromLog(log));
    }

    public Flowable<RewardAddedEventResponse> rewardAddedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(REWARDADDED_EVENT));
        return rewardAddedEventFlowable(filter);
    }

    public static RewardClaimedEventResponse getRewardClaimedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(REWARDCLAIMED_EVENT, log);
        RewardClaimedEventResponse typedResponse = new RewardClaimedEventResponse();
        typedResponse.log = log;
        typedResponse.staker = (String) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.claimedRewards = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        return typedResponse;
    }

    public Flowable<RewardClaimedEventResponse> rewardClaimedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getRewardClaimedEventFromLog(log));
    }

    public Flowable<RewardClaimedEventResponse> rewardClaimedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(REWARDCLAIMED_EVENT));
        return rewardClaimedEventFlowable(filter);
    }

    public static RewardFinalizedEventResponse getRewardFinalizedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(REWARDFINALIZED_EVENT, log);
        RewardFinalizedEventResponse typedResponse = new RewardFinalizedEventResponse();
        typedResponse.log = log;
        typedResponse.staker = (String) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.shouldForfeit = (Boolean) eventValues.getNonIndexedValues().get(0).getValue();
        return typedResponse;
    }

    public Flowable<RewardFinalizedEventResponse> rewardFinalizedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getRewardFinalizedEventFromLog(log));
    }

    public Flowable<RewardFinalizedEventResponse> rewardFinalizedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(REWARDFINALIZED_EVENT));
        return rewardFinalizedEventFlowable(filter);
    }

    public static RoleAdminChangedEventResponse getRoleAdminChangedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(ROLEADMINCHANGED_EVENT, log);
        RoleAdminChangedEventResponse typedResponse = new RoleAdminChangedEventResponse();
        typedResponse.log = log;
        typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.previousAdminRole = (byte[]) eventValues.getIndexedValues().get(1).getValue();
        typedResponse.newAdminRole = (byte[]) eventValues.getIndexedValues().get(2).getValue();
        return typedResponse;
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getRoleAdminChangedEventFromLog(log));
    }

    public Flowable<RoleAdminChangedEventResponse> roleAdminChangedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEADMINCHANGED_EVENT));
        return roleAdminChangedEventFlowable(filter);
    }

    public static RoleGrantedEventResponse getRoleGrantedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(ROLEGRANTED_EVENT, log);
        RoleGrantedEventResponse typedResponse = new RoleGrantedEventResponse();
        typedResponse.log = log;
        typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
        typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
        return typedResponse;
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getRoleGrantedEventFromLog(log));
    }

    public Flowable<RoleGrantedEventResponse> roleGrantedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEGRANTED_EVENT));
        return roleGrantedEventFlowable(filter);
    }

    public static RoleRevokedEventResponse getRoleRevokedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(ROLEREVOKED_EVENT, log);
        RoleRevokedEventResponse typedResponse = new RoleRevokedEventResponse();
        typedResponse.log = log;
        typedResponse.role = (byte[]) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.account = (String) eventValues.getIndexedValues().get(1).getValue();
        typedResponse.sender = (String) eventValues.getIndexedValues().get(2).getValue();
        return typedResponse;
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getRoleRevokedEventFromLog(log));
    }

    public Flowable<RoleRevokedEventResponse> roleRevokedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ROLEREVOKED_EVENT));
        return roleRevokedEventFlowable(filter);
    }

    public static StakerRewardUpdatedEventResponse getStakerRewardUpdatedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(STAKERREWARDUPDATED_EVENT, log);
        StakerRewardUpdatedEventResponse typedResponse = new StakerRewardUpdatedEventResponse();
        typedResponse.log = log;
        typedResponse.staker = (String) eventValues.getIndexedValues().get(0).getValue();
        typedResponse.vestedBaseReward = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        typedResponse.vestedDelegatedReward = (BigInteger) eventValues.getNonIndexedValues().get(1).getValue();
        typedResponse.baseRewardPerToken = (BigInteger) eventValues.getNonIndexedValues().get(2).getValue();
        typedResponse.operatorDelegatedRewardPerToken = (BigInteger) eventValues.getNonIndexedValues().get(3).getValue();
        typedResponse.claimedBaseRewardsInPeriod = (BigInteger) eventValues.getNonIndexedValues().get(4).getValue();
        return typedResponse;
    }

    public Flowable<StakerRewardUpdatedEventResponse> stakerRewardUpdatedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getStakerRewardUpdatedEventFromLog(log));
    }

    public Flowable<StakerRewardUpdatedEventResponse> stakerRewardUpdatedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(STAKERREWARDUPDATED_EVENT));
        return stakerRewardUpdatedEventFlowable(filter);
    }

    public static UnpausedEventResponse getUnpausedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(UNPAUSED_EVENT, log);
        UnpausedEventResponse typedResponse = new UnpausedEventResponse();
        typedResponse.log = log;
        typedResponse.account = (String) eventValues.getNonIndexedValues().get(0).getValue();
        return typedResponse;
    }

    public Flowable<UnpausedEventResponse> unpausedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getUnpausedEventFromLog(log));
    }

    public Flowable<UnpausedEventResponse> unpausedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(UNPAUSED_EVENT));
        return unpausedEventFlowable(filter);
    }

    public static VaultClosedEventResponse getVaultClosedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(VAULTCLOSED_EVENT, log);
        VaultClosedEventResponse typedResponse = new VaultClosedEventResponse();
        typedResponse.log = log;
        typedResponse.totalUnvestedRewards = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
        return typedResponse;
    }

    public Flowable<VaultClosedEventResponse> vaultClosedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getVaultClosedEventFromLog(log));
    }

    public Flowable<VaultClosedEventResponse> vaultClosedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(VAULTCLOSED_EVENT));
        return vaultClosedEventFlowable(filter);
    }

    public static VaultOpenedEventResponse getVaultOpenedEventFromLog(Log log) {
        Contract.EventValuesWithLog eventValues = staticExtractEventParametersWithLog(VAULTOPENED_EVENT, log);
        VaultOpenedEventResponse typedResponse = new VaultOpenedEventResponse();
        typedResponse.log = log;
        return typedResponse;
    }

    public Flowable<VaultOpenedEventResponse> vaultOpenedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(log -> getVaultOpenedEventFromLog(log));
    }

    public Flowable<VaultOpenedEventResponse> vaultOpenedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(VAULTOPENED_EVENT));
        return vaultOpenedEventFlowable(filter);
    }

    public RemoteFunctionCall<byte[]> DEFAULT_ADMIN_ROLE() {
        final Function function = new Function(FUNC_DEFAULT_ADMIN_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<byte[]> PAUSER_ROLE() {
        final Function function = new Function(FUNC_PAUSER_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<byte[]> REWARDER_ROLE() {
        final Function function = new Function(FUNC_REWARDER_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<TransactionReceipt> acceptDefaultAdminTransfer() {
        final Function function = new Function(
                FUNC_ACCEPTDEFAULTADMINTRANSFER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addReward(String pool, BigInteger amount, BigInteger emissionRate) {
        final Function function = new Function(
                FUNC_ADDREWARD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(pool), 
                new org.web3j.abi.datatypes.generated.Uint256(amount), 
                new org.web3j.abi.datatypes.generated.Uint256(emissionRate)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> beginDefaultAdminTransfer(String newAdmin) {
        final Function function = new Function(
                FUNC_BEGINDEFAULTADMINTRANSFER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(newAdmin)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Tuple2<StakerReward, BigInteger>> calculateLatestStakerReward(String staker) {
        final Function function = new Function(FUNC_CALCULATELATESTSTAKERREWARD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(staker)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<StakerReward>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple2<StakerReward, BigInteger>>(function,
                new Callable<Tuple2<StakerReward, BigInteger>>() {
                    @Override
                    public Tuple2<StakerReward, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<StakerReward, BigInteger>(
                                (StakerReward) results.get(0), 
                                (BigInteger) results.get(1).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> cancelDefaultAdminTransfer() {
        final Function function = new Function(
                FUNC_CANCELDEFAULTADMINTRANSFER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> changeDefaultAdminDelay(BigInteger newDelay) {
        final Function function = new Function(
                FUNC_CHANGEDEFAULTADMINDELAY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint48(newDelay)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> claimReward() {
        final Function function = new Function(
                FUNC_CLAIMREWARD, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> close() {
        final Function function = new Function(
                FUNC_CLOSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> concludeRewardPeriod(String staker, BigInteger oldPrincipal, BigInteger stakedAt, BigInteger unstakedAmount, Boolean shouldForfeit) {
        final Function function = new Function(
                FUNC_CONCLUDEREWARDPERIOD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(staker), 
                new org.web3j.abi.datatypes.generated.Uint256(oldPrincipal), 
                new org.web3j.abi.datatypes.generated.Uint256(stakedAt), 
                new org.web3j.abi.datatypes.generated.Uint256(unstakedAmount), 
                new org.web3j.abi.datatypes.Bool(shouldForfeit)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> defaultAdmin() {
        final Function function = new Function(FUNC_DEFAULTADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<BigInteger> defaultAdminDelay() {
        final Function function = new Function(FUNC_DEFAULTADMINDELAY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint48>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> defaultAdminDelayIncreaseWait() {
        final Function function = new Function(FUNC_DEFAULTADMINDELAYINCREASEWAIT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint48>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> emergencyPause() {
        final Function function = new Function(
                FUNC_EMERGENCYPAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> emergencyUnpause() {
        final Function function = new Function(
                FUNC_EMERGENCYUNPAUSE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<BigInteger> getDelegationRate() {
        final Function function = new Function(FUNC_GETDELEGATIONRATE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<VestingCheckpointData> getFinalVestingCheckpointData() {
        final Function function = new Function(FUNC_GETFINALVESTINGCHECKPOINTDATA, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<VestingCheckpointData>() {}));
        return executeRemoteCallSingleValueReturn(function, VestingCheckpointData.class);
    }

    public RemoteFunctionCall<BigInteger> getMultiplier(String staker) {
        final Function function = new Function(FUNC_GETMULTIPLIER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(staker)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getMultiplierDuration() {
        final Function function = new Function(FUNC_GETMULTIPLIERDURATION, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<BigInteger> getReward(String staker) {
        final Function function = new Function(FUNC_GETREWARD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(staker)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<RewardBuckets> getRewardBuckets() {
        final Function function = new Function(FUNC_GETREWARDBUCKETS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<RewardBuckets>() {}));
        return executeRemoteCallSingleValueReturn(function, RewardBuckets.class);
    }

    public RemoteFunctionCall<Tuple2<BigInteger, BigInteger>> getRewardPerTokenUpdatedAt() {
        final Function function = new Function(FUNC_GETREWARDPERTOKENUPDATEDAT, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple2<BigInteger, BigInteger>>(function,
                new Callable<Tuple2<BigInteger, BigInteger>>() {
                    @Override
                    public Tuple2<BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue());
                    }
                });
    }

    public RemoteFunctionCall<byte[]> getRoleAdmin(byte[] role) {
        final Function function = new Function(FUNC_GETROLEADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<List> getStakingPools() {
        final Function function = new Function(FUNC_GETSTAKINGPOOLS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<StakerReward> getStoredReward(String staker) {
        final Function function = new Function(FUNC_GETSTOREDREWARD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(staker)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<StakerReward>() {}));
        return executeRemoteCallSingleValueReturn(function, StakerReward.class);
    }

    public RemoteFunctionCall<Tuple3<BigInteger, BigInteger, BigInteger>> getUnvestedRewards() {
        final Function function = new Function(FUNC_GETUNVESTEDREWARDS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}));
        return new RemoteFunctionCall<Tuple3<BigInteger, BigInteger, BigInteger>>(function,
                new Callable<Tuple3<BigInteger, BigInteger, BigInteger>>() {
                    @Override
                    public Tuple3<BigInteger, BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<BigInteger, BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> grantRole(byte[] role, String account) {
        final Function function = new Function(
                FUNC_GRANTROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> hasRewardAdded() {
        final Function function = new Function(FUNC_HASREWARDADDED, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> hasRewardDurationEnded(String stakingPool) {
        final Function function = new Function(FUNC_HASREWARDDURATIONENDED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(stakingPool)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> hasRole(byte[] role, String account) {
        final Function function = new Function(FUNC_HASROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(account)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> isOpen() {
        final Function function = new Function(FUNC_ISOPEN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Boolean> isPaused() {
        final Function function = new Function(FUNC_ISPAUSED, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> owner() {
        final Function function = new Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Boolean> paused() {
        final Function function = new Function(FUNC_PAUSED, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<Tuple2<String, BigInteger>> pendingDefaultAdmin() {
        final Function function = new Function(FUNC_PENDINGDEFAULTADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Uint48>() {}));
        return new RemoteFunctionCall<Tuple2<String, BigInteger>>(function,
                new Callable<Tuple2<String, BigInteger>>() {
                    @Override
                    public Tuple2<String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<String, BigInteger>(
                                (String) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple2<BigInteger, BigInteger>> pendingDefaultAdminDelay() {
        final Function function = new Function(FUNC_PENDINGDEFAULTADMINDELAY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint48>() {}, new TypeReference<Uint48>() {}));
        return new RemoteFunctionCall<Tuple2<BigInteger, BigInteger>>(function,
                new Callable<Tuple2<BigInteger, BigInteger>>() {
                    @Override
                    public Tuple2<BigInteger, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<BigInteger, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (BigInteger) results.get(1).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> renounceRole(byte[] role, String account) {
        final Function function = new Function(
                FUNC_RENOUNCEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> revokeRole(byte[] role, String account) {
        final Function function = new Function(
                FUNC_REVOKEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> rollbackDefaultAdminDelay() {
        final Function function = new Function(
                FUNC_ROLLBACKDEFAULTADMINDELAY, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setDelegationRate(BigInteger newDelegationRate) {
        final Function function = new Function(
                FUNC_SETDELEGATIONRATE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(newDelegationRate)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> supportsInterface(byte[] interfaceId) {
        final Function function = new Function(FUNC_SUPPORTSINTERFACE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> typeAndVersion() {
        final Function function = new Function(FUNC_TYPEANDVERSION, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> updateReward(String staker, BigInteger stakerPrincipal) {
        final Function function = new Function(
                FUNC_UPDATEREWARD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(staker), 
                new org.web3j.abi.datatypes.generated.Uint256(stakerPrincipal)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static LinkStaking load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new LinkStaking(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static LinkStaking load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new LinkStaking(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static LinkStaking load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new LinkStaking(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static LinkStaking load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new LinkStaking(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<LinkStaking> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, ConstructorParams params) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(params));
        return deployRemoteCall(LinkStaking.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<LinkStaking> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, ConstructorParams params) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(params));
        return deployRemoteCall(LinkStaking.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<LinkStaking> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, ConstructorParams params) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(params));
        return deployRemoteCall(LinkStaking.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<LinkStaking> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, ConstructorParams params) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(params));
        return deployRemoteCall(LinkStaking.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static class ConstructorParams extends StaticStruct {
        public String linkToken;

        public String communityStakingPool;

        public String operatorStakingPool;

        public BigInteger delegationRate;

        public BigInteger multiplierDuration;

        public BigInteger adminRoleTransferDelay;

        public ConstructorParams(String linkToken, String communityStakingPool, String operatorStakingPool, BigInteger delegationRate, BigInteger multiplierDuration, BigInteger adminRoleTransferDelay) {
            super(new org.web3j.abi.datatypes.Address(linkToken), 
                    new org.web3j.abi.datatypes.Address(communityStakingPool), 
                    new org.web3j.abi.datatypes.Address(operatorStakingPool), 
                    new org.web3j.abi.datatypes.generated.Uint32(delegationRate), 
                    new org.web3j.abi.datatypes.generated.Uint32(multiplierDuration), 
                    new org.web3j.abi.datatypes.generated.Uint48(adminRoleTransferDelay));
            this.linkToken = linkToken;
            this.communityStakingPool = communityStakingPool;
            this.operatorStakingPool = operatorStakingPool;
            this.delegationRate = delegationRate;
            this.multiplierDuration = multiplierDuration;
            this.adminRoleTransferDelay = adminRoleTransferDelay;
        }

        public ConstructorParams(Address linkToken, Address communityStakingPool, Address operatorStakingPool, Uint32 delegationRate, Uint32 multiplierDuration, Uint48 adminRoleTransferDelay) {
            super(linkToken, communityStakingPool, operatorStakingPool, delegationRate, multiplierDuration, adminRoleTransferDelay);
            this.linkToken = linkToken.getValue();
            this.communityStakingPool = communityStakingPool.getValue();
            this.operatorStakingPool = operatorStakingPool.getValue();
            this.delegationRate = delegationRate.getValue();
            this.multiplierDuration = multiplierDuration.getValue();
            this.adminRoleTransferDelay = adminRoleTransferDelay.getValue();
        }
    }

    public static class StakerReward extends StaticStruct {
        public BigInteger vestedBaseReward;

        public BigInteger vestedDelegatedReward;

        public BigInteger baseRewardPerToken;

        public BigInteger operatorDelegatedRewardPerToken;

        public BigInteger stakerType;

        public BigInteger claimedBaseRewardsInPeriod;

        public BigInteger unvestedBaseReward;

        public StakerReward(BigInteger vestedBaseReward, BigInteger vestedDelegatedReward, BigInteger baseRewardPerToken, BigInteger operatorDelegatedRewardPerToken, BigInteger stakerType, BigInteger claimedBaseRewardsInPeriod, BigInteger unvestedBaseReward) {
            super(new org.web3j.abi.datatypes.generated.Uint112(vestedBaseReward), 
                    new org.web3j.abi.datatypes.generated.Uint112(vestedDelegatedReward), 
                    new org.web3j.abi.datatypes.generated.Uint112(baseRewardPerToken), 
                    new org.web3j.abi.datatypes.generated.Uint112(operatorDelegatedRewardPerToken), 
                    new org.web3j.abi.datatypes.generated.Uint8(stakerType), 
                    new org.web3j.abi.datatypes.generated.Uint112(claimedBaseRewardsInPeriod), 
                    new org.web3j.abi.datatypes.generated.Uint112(unvestedBaseReward));
            this.vestedBaseReward = vestedBaseReward;
            this.vestedDelegatedReward = vestedDelegatedReward;
            this.baseRewardPerToken = baseRewardPerToken;
            this.operatorDelegatedRewardPerToken = operatorDelegatedRewardPerToken;
            this.stakerType = stakerType;
            this.claimedBaseRewardsInPeriod = claimedBaseRewardsInPeriod;
            this.unvestedBaseReward = unvestedBaseReward;
        }

        public StakerReward(Uint112 vestedBaseReward, Uint112 vestedDelegatedReward, Uint112 baseRewardPerToken, Uint112 operatorDelegatedRewardPerToken, Uint8 stakerType, Uint112 claimedBaseRewardsInPeriod, Uint112 unvestedBaseReward) {
            super(vestedBaseReward, vestedDelegatedReward, baseRewardPerToken, operatorDelegatedRewardPerToken, stakerType, claimedBaseRewardsInPeriod, unvestedBaseReward);
            this.vestedBaseReward = vestedBaseReward.getValue();
            this.vestedDelegatedReward = vestedDelegatedReward.getValue();
            this.baseRewardPerToken = baseRewardPerToken.getValue();
            this.operatorDelegatedRewardPerToken = operatorDelegatedRewardPerToken.getValue();
            this.stakerType = stakerType.getValue();
            this.claimedBaseRewardsInPeriod = claimedBaseRewardsInPeriod.getValue();
            this.unvestedBaseReward = unvestedBaseReward.getValue();
        }
    }

    public static class VestingCheckpointData extends StaticStruct {
        public BigInteger operatorPoolTotalPrincipal;

        public BigInteger communityPoolTotalPrincipal;

        public BigInteger finalBlockNumber;

        public VestingCheckpointData(BigInteger operatorPoolTotalPrincipal, BigInteger communityPoolTotalPrincipal, BigInteger finalBlockNumber) {
            super(new org.web3j.abi.datatypes.generated.Uint256(operatorPoolTotalPrincipal), 
                    new org.web3j.abi.datatypes.generated.Uint256(communityPoolTotalPrincipal), 
                    new org.web3j.abi.datatypes.generated.Uint256(finalBlockNumber));
            this.operatorPoolTotalPrincipal = operatorPoolTotalPrincipal;
            this.communityPoolTotalPrincipal = communityPoolTotalPrincipal;
            this.finalBlockNumber = finalBlockNumber;
        }

        public VestingCheckpointData(Uint256 operatorPoolTotalPrincipal, Uint256 communityPoolTotalPrincipal, Uint256 finalBlockNumber) {
            super(operatorPoolTotalPrincipal, communityPoolTotalPrincipal, finalBlockNumber);
            this.operatorPoolTotalPrincipal = operatorPoolTotalPrincipal.getValue();
            this.communityPoolTotalPrincipal = communityPoolTotalPrincipal.getValue();
            this.finalBlockNumber = finalBlockNumber.getValue();
        }
    }

    public static class RewardBucket extends StaticStruct {
        public BigInteger emissionRate;

        public BigInteger rewardDurationEndsAt;

        public BigInteger vestedRewardPerToken;

        public RewardBucket(BigInteger emissionRate, BigInteger rewardDurationEndsAt, BigInteger vestedRewardPerToken) {
            super(new org.web3j.abi.datatypes.generated.Uint80(emissionRate), 
                    new org.web3j.abi.datatypes.generated.Uint80(rewardDurationEndsAt), 
                    new org.web3j.abi.datatypes.generated.Uint80(vestedRewardPerToken));
            this.emissionRate = emissionRate;
            this.rewardDurationEndsAt = rewardDurationEndsAt;
            this.vestedRewardPerToken = vestedRewardPerToken;
        }

        public RewardBucket(Uint80 emissionRate, Uint80 rewardDurationEndsAt, Uint80 vestedRewardPerToken) {
            super(emissionRate, rewardDurationEndsAt, vestedRewardPerToken);
            this.emissionRate = emissionRate.getValue();
            this.rewardDurationEndsAt = rewardDurationEndsAt.getValue();
            this.vestedRewardPerToken = vestedRewardPerToken.getValue();
        }
    }

    public static class RewardBuckets extends StaticStruct {
        public RewardBucket operatorBase;

        public RewardBucket communityBase;

        public RewardBucket operatorDelegated;

        public RewardBuckets(RewardBucket operatorBase, RewardBucket communityBase, RewardBucket operatorDelegated) {
            super(operatorBase, 
                    communityBase, 
                    operatorDelegated);
            this.operatorBase = operatorBase;
            this.communityBase = communityBase;
            this.operatorDelegated = operatorDelegated;
        }
    }

    public static class CommunityPoolRewardUpdatedEventResponse extends BaseEventResponse {
        public BigInteger baseRewardPerToken;
    }

    public static class DefaultAdminDelayChangeCanceledEventResponse extends BaseEventResponse {
    }

    public static class DefaultAdminDelayChangeScheduledEventResponse extends BaseEventResponse {
        public BigInteger newDelay;

        public BigInteger effectSchedule;
    }

    public static class DefaultAdminTransferCanceledEventResponse extends BaseEventResponse {
    }

    public static class DefaultAdminTransferScheduledEventResponse extends BaseEventResponse {
        public String newAdmin;

        public BigInteger acceptSchedule;
    }

    public static class DelegationRateSetEventResponse extends BaseEventResponse {
        public BigInteger oldDelegationRate;

        public BigInteger newDelegationRate;
    }

    public static class ForfeitedRewardDistributedEventResponse extends BaseEventResponse {
        public BigInteger vestedReward;

        public BigInteger vestedRewardPerToken;

        public BigInteger reclaimedReward;

        public Boolean isOperatorReward;
    }

    public static class OperatorPoolRewardUpdatedEventResponse extends BaseEventResponse {
        public BigInteger baseRewardPerToken;

        public BigInteger delegatedRewardPerToken;
    }

    public static class PausedEventResponse extends BaseEventResponse {
        public String account;
    }

    public static class RewardAddedEventResponse extends BaseEventResponse {
        public String pool;

        public BigInteger amount;

        public BigInteger emissionRate;
    }

    public static class RewardClaimedEventResponse extends BaseEventResponse {
        public String staker;

        public BigInteger claimedRewards;
    }

    public static class RewardFinalizedEventResponse extends BaseEventResponse {
        public String staker;

        public Boolean shouldForfeit;
    }

    public static class RoleAdminChangedEventResponse extends BaseEventResponse {
        public byte[] role;

        public byte[] previousAdminRole;

        public byte[] newAdminRole;
    }

    public static class RoleGrantedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }

    public static class RoleRevokedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }

    public static class StakerRewardUpdatedEventResponse extends BaseEventResponse {
        public String staker;

        public BigInteger vestedBaseReward;

        public BigInteger vestedDelegatedReward;

        public BigInteger baseRewardPerToken;

        public BigInteger operatorDelegatedRewardPerToken;

        public BigInteger claimedBaseRewardsInPeriod;
    }

    public static class UnpausedEventResponse extends BaseEventResponse {
        public String account;
    }

    public static class VaultClosedEventResponse extends BaseEventResponse {
        public BigInteger totalUnvestedRewards;
    }

    public static class VaultOpenedEventResponse extends BaseEventResponse {
    }
}
